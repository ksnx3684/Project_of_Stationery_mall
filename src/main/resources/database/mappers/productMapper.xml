<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.stationery.project.product.ProductDAO">

	<!-- 옵션 없는 경우 null -->
	<select id="optionCk" parameterType="OptionDTO" resultType="OptionDTO">
		select * from product_option where productnum=#{productNum} and optionNum=1
	</select>

	<insert id="addCart" parameterType="CartDTO">
		insert into cart(cartNum,id,productNum,optionNum,totalprice,productcount)
		values(cart_seq.nextval,#{id},#{productNum},#{optionNum},(select price from product where productnum=#{productNum})*#{productCount},#{productCount})
	</insert>

	<!-- 옵션없는 상품 재고 업데이트 -->
	<update id="productStockUpdate" parameterType="ProductDTO">
		update product
		set stock=#{stock}+stock
		where productnum=#{productNum}
	</update>

	<!-- update option stock -->
	<update id="stockUpdate" parameterType="OptionDTO">
		update product_option 
		set optionstock=#{optionStock}+optionstock
		where productnum=#{productNum} and optionnum=#{optionNum}
	</update>

	<delete id="optionDelete" parameterType="OptionDTO">
   		delete product_option where productnum=#{productNum} and optionNum=#{optionNum}
	</delete>

	<update id="updateThumbnail" parameterType="ProductDTO">
		update product set thumbnail=#{thumbnail}
		where productnum=#{productNum}
	</update>


	<select id="listFile" parameterType="ProductFileDTO"
		resultType="ProductFileDTO">
		select * from product_file
		where productnum =#{productNum}
	</select>

	<delete id="fileDelete" parameterType="ProductFileDTO">
		delete product_file where
		fileNum=#{fileNum}
	</delete>


	<select id="list" parameterType="Pager" resultType="ProductDTO" >
	 select * from 
        (select rownum R,PC.* from
        (select * from product P left outer join product_category
        C using(categorynum)
        where productnum>0 
        and name like'%'||#{search}||'%' and parentid like '%'||#{categoryNum}||'%'
        order by productnum desc)PC)
        where R between #{startRow} and #{lastRow} 
	</select>
	
	
	<select id="subCateList" parameterType="Pager" resultType="ProductDTO" >
	 	select * from 
        (select rownum R,PC.* from
        (select * from product P left outer join product_category
        C using(categorynum)
        where productnum>0 
        and categorynum=#{categoryNum}
        order by productnum desc)PC)
        where R between #{startRow} and #{lastRow} 
	</select>
	
	
	

	<select id="total" resultType="java.lang.Long"
		parameterType="Pager">
		select count(productnum) from product P
		inner join product_category C
		using(categorynum)
		where name like'%'||#{search}||'%'
		and C.parentid like'%'||#{categoryNum}||'%'
	</select>


	<select id="optionList" parameterType="OptionDTO"
		resultType="OptionDTO">
		select * from product_option
		where productnum=(select productnum from product where
		productnum=#{productNum})
		order by optionnum
	</select>
	

	<!-- detail -->
	<select id="detail" parameterType="ProductDTO"
		resultType="ProductDTO" resultMap="files">
		select * from product P
		left join product_file F
		using(productnum)
		where productnum=#{productNum}
		order by thumbnailCheck asc
	</select>

	<resultMap type="ProductDTO" id="files">
		<id column="productNum" property="productNum"></id>
		<result column="categoryNum" property="categoryNum" />
		<result column="name" property="name" />
		<result column="contents" property="contents" />
		<result column="thumbnail" property="thumbnail" />
		<result column="price" property="price" />
		<result column="stock" property="stock" />
		<result column="regDate" property="regDate" />
		<collection property="productFileDTOs" javaType="List"
			ofType="ProductFileDTO">
			<id column="fileNum" property="fileNum" /> <!-- pk -->
			<result column="fileName" property="fileName" />
			<result column="oriName" property="oriName" />
			<result column="productNum" property="productNum" />
			<result column="thumbnailCheck" property="thumbnailCheck" />

		</collection>
	</resultMap>

	<insert id="optionAdd" parameterType="OptionDTO">
        insert into product_option 
        values((select nvl(max(optionnum),0)+1 from product_option where productnum=#{productNum}),#{productNum},#{optionContents},#{optionStock})
	</insert>
	<!--optionnum 시퀀스  -->
	<!-- 
	(select nvl(max(optionnum),0)+1 from product_option) -->

	<insert id="addFile" parameterType="ProductFileDTO">
		insert into
		product_file(filenum,productnum,filename,oriname,thumbnailCheck)
		values(PRODUCT_FILE_SEQ.nextval,#{productNum},#{fileName},#{oriName},#{thumbnailCheck})
	</insert>


	<!--file때문에 productnum 먼저추가해야됨 -->
	<insert id="add" parameterType="ProductDTO">
		<selectKey keyProperty="productNum" order="BEFORE" resultType="java.lang.Integer">
			select product_seq.nextval from dual
		</selectKey>
		insert into
		PRODUCT(PRODUCTNUM,CATEGORYNUM,NAME,CONTENTS,THUMBNAIL,PRICE,STOCK,REGDATE)
		values(#{productNum},#{categoryNum},#{name},#{contents},#{thumbnail},#{price},#{stock},sysdate)
	</insert>

	<delete id="delete" parameterType="ProductDTO">
		delete product where
		productnum=#{productNum}
	</delete>

	<update id="update" parameterType="ProductDTO">
		update product
		set
		categorynum=#{categoryNum},name=#{name},contents=#{contents},price=#{price},stock=stock+#{stock}
		where productnum=#{productNum}
	</update>
	
	
</mapper>

