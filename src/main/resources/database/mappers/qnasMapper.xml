<?xml version="1.0" encoding="UTF-8"?> <!-- 이건 xml이다 -->
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.stationery.project.board.qnas.QnasDAO">
	<delete id="fileDelete" parameterType="QnasFileDTO">
		DELETE QNAS_FILE WHERE FILENUM=#{fileNum}
 	</delete>
 	
 	<select id="listFile" parameterType="BoardDTO" resultType="QnasFileDTO">
 		SELECT * FROM QNAS_FILE
 		WHERE NUM=#{num}
 	</select>
 
  	<select id="detailFile" parameterType="QnasFileDTO" resultType="QnasFileDTO">
 		SELECT * FROM QNAS_FILE
 		WHERE FILENUM=#{fileNum}
 	</select>
 
  	<insert id="addFile" parameterType="BoardFileDTO">
 		INSERT INTO QNAS_FILE (FILENUM, NUM, FILENAME, ORINAME)
 		VALUES (QNAS_FILE_SEQ.NEXTVAL, #{num}, #{fileName}, #{oriName})
 	</insert>
 	
 	<insert id="reply" parameterType="QnasDTO">
 		insert into qnas (num, productNum, id, title, contents, type, ref, step, depth)
 		values (QNAS_SEQ.NEXTVAL, #{productNum}, #{id}, #{title}, #{contents}, #{type}, #{ref}, #{step}, #{depth})
 	</insert>
 
 	<update id="stepUpdate" parameterType="QnasDTO">
 		update qnas set step=step+1
 		where ref=#{ref} and step>#{step}
 	</update>

	<insert id="add" parameterType="QnasDTO">
		<selectKey keyProperty="num" order="BEFORE" resultType="Long">
 			SELECT QNAS_SEQ.NEXTVAL FROM DUAL
 		</selectKey>
 		insert into QNAS (num, productNum, id, title, contents, type, ref, step, depth)
 		values (#{num},#{productNum}, #{id}, #{title}, #{contents}, #{type}, #{num}, 0, 0)
	</insert>

	<select id="allList" resultType="QnasDTO" parameterType="Pager">
		SELECT * FROM
		    (SELECT rownum R, B.* FROM 
		        (SELECT * FROM QNAS WHERE 
		        	NUM>0 
		        	and 
		        	<choose>
		        		<when test="kind=='col1'">
		        			TITLE
		        		</when>
		        		<when test="kind =='col2'">
		        			CONTENTS
		        		</when>
		        		<otherwise>
		        			ID
		        		</otherwise>
		        	</choose>	
		        	LIKE '%'||#{search}||'%'
		            ORDER BY NUM DESC
		         ) B
		     )
		WHERE R between #{startRow} and #{lastRow} 
	</select>

	<select id="detail" parameterType="QnasDTO" resultMap="detailResult">
			SELECT Q.*, QF.*
		FROM
	        QNAS Q
	            LEFT OUTER JOIN
	        QNAS_FILE QF
	        	ON Q.NUM=QF.NUM
		WHERE   Q.NUM=#{num} 
 	</select>
 	
 	<resultMap type="QnasDTO" id="detailResult">
 		<id column="num" property="num"/>
 		<result column="productNum" property="productNum"/>
 		<result column="id" property="id"/>
 		<result column="title" property="title"/>
 		<result column="contents" property="contents"/>
 		<result column="type" property="type"/>
 		<result column="ref" property="ref"/>
 		<result column="step" property="step"/>
 		<result column="depth" property="depth"/>
 		<collection property="fileDTOs" javaType="List" ofType="QnasFileDTO">
 			<id column="fileNum" property="fileNum"/>
 			<result column="fileName" property="fileName"/>
 			<result column="oriName" property="oriName"/>
 		</collection>
 	</resultMap>
	
	<select id="list" parameterType="hashmap" resultType="QnasDTO">
		SELECT * FROM
		(SELECT rownum R, B.* FROM
		(SELECT * FROM QNAS WHERE
		NUM>0
		and
		<choose>
			<when test="kind=='col1'">
				TITLE
			</when>
			<when test="kind =='col2'">
				CONTENTS
			</when>
			<otherwise>
				ID
			</otherwise>
		</choose>
		LIKE '%'||#{search}||'%'
		ORDER BY REF DESC, STEP ASC
		) B
		)
		WHERE R between #{pager.startRow} and #{pager.lastRow} and
		productNum=#{productNum}
	</select>

	<select id="total" resultType="Long" parameterType="Pager">
		SELECT COUNT(NUM) FROM QNAS
		WHERE
		NUM>0
		and
		<choose>
			<when test="kind=='col1'">
				TITLE
			</when>
			<when test="kind =='col2'">
				CONTENTS
			</when>
			<otherwise>
				ID
			</otherwise>
		</choose>
		LIKE '%'||#{search}||'%'
	</select>

	<update id="qnaUpdate" parameterType="QnasDTO">
		UPDATE QNAS SET TITLE=#{title}, CONTENTS=#{contents} WHERE NUM=#{num}
	</update>
	
	<delete id="qnaDelete" parameterType="QnasDTO">
		DELETE QNAS WHERE NUM=#{num}
	</delete>
	

</mapper>